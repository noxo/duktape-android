apply plugin: 'com.android.library'

android {
  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion
  namespace  = "com.squareup.duktape"
  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 28
    versionCode 1
    versionName "1.0"
    ndk {
      abiFilters(*rootProject.ext.ndkAbiFilters)
    }
    externalNativeBuild {
      cmake {
        arguments '-DANDROID_TOOLCHAIN=clang', '-DANDROID_STL=c++_static'
        cFlags '-std=c99', '-fstrict-aliasing'
        cppFlags '-std=c++11', '-fstrict-aliasing', '-fexceptions'
      }
    }
  }
  buildTypes {
    release {
      externalNativeBuild {
        cmake {
          arguments '-DCMAKE_BUILD_TYPE=MinSizeRel'
          cFlags '-g0', '-Os', '-fomit-frame-pointer', '-DNDEBUG', '-fvisibility=hidden'
          cppFlags '-g0', '-Os', '-fomit-frame-pointer', '-DNDEBUG', '-fvisibility=hidden'
        }
      }
    }
    debug {
      externalNativeBuild {
        cmake {
          cFlags '-g', '-DDEBUG'
          cppFlags '-g', '-DDEBUG'
        }
      }
    }
  }
  externalNativeBuild {
    cmake {
      path "src/main/jni/CMakeLists.txt"
    }
  }
}

dependencies {
  implementation 'com.android.support:support-annotations:27.1.1'
}

//task sourcesJar(type: Jar) {
//  from android.sourceSets.main.java.srcDirs
//  classifier = 'sources'
//}
//
//task javadoc(type: Javadoc) {
//  source = android.sourceSets.main.java.srcDirs
//  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//
//task javadocJar(type: Jar, dependsOn: javadoc) {
//  classifier = 'javadoc'
//  from javadoc.destinationDir
//}
//
//artifacts {
//  archives javadocJar
//  archives sourcesJar
//}
